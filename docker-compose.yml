version: '2'

volumes:
  postgres_data_dev: {}

services:

  # Database
  postgres:
    restart: always
    build: ./docker/postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=root
      - POSTGRES_DB=starter

  # Postgres admin (Default login: pgadmin4@pgadmin.org / admin)
  pgadmin:
    image: fenglc/pgadmin4
    ports:
      - "5050:5050"
    links:
      - postgres

  # Key/Value store for Caching and channels
  redis:
    restart: always
    build:
      context: ./docker/redis/

  # Browser for debugging Redis
  redis-browser:
    image: birkof/redis-browser:latest
    command: "-B 0.0.0.0 -P 8019 --url redis://redis:6379"
    ports:
      - "8019:8019"
    links:
      - redis

  # Mailhog is a local mail server with an inbox view
  mailhog:
    build:
      context: ./docker/mailhog/
    ports:
      - "8025:8025"

  # Message broker RabbitMQ with an HTTP-based API for management and monitoring
  rabbitmq:
    build:
      context: ./docker/rabbitmq/
    ports:
      - "15672:15672"

  # Django web server
  django: &django
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
    command: /start_daphne.sh
    volumes:
      - .:/app
    environment:
      - POSTGRES_USER=postgres
    ports:
      - "8000:8000"
      - "80:8000"
    depends_on:
      - postgres
    links:
      - postgres
      - rabbitmq
      - mailhog
      - redis

  # Django worker for working on HTTP / ASGI requests
  django-worker:
    <<: *django
    command: python manage.py runworker
    ports: []

  # Starts a server to serve sphinx documentation and to autobuild new changes
  sphinx:
    build:
      context: .
      dockerfile: ./docker/sphinx/Dockerfile
    command: sphinx-autobuild docs/. docs/_build -H 0.0.0.0 -p 8007
    volumes:
      - .:/app
    ports:
      - "8007:8007"
      
#  celeryworker:
#    build:
#      context: .
#      dockerfile: ./docker/django/Dockerfile
#    user: django
#    env_file: .env
#    depends_on:
#     - postgres
#    command: celery -A main.celery worker -l INFO
#
#  celerybeat:
#    build:
#      context: .
#      dockerfile: ./docker/django/Dockerfile
#    user: django
#    env_file: .env
#    depends_on:
#      - postgres
#    command: celery -A main.celery beat -l INFO