version: '2'

volumes:
  postgres_data_dev: {}
  postgres_backup_dev: {}

services:

  # Database
  postgres:
    build: ./compose/postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - postgres_backup_dev:/backups
    environment:
      - POSTGRES_USER=postgres

  # In-memory data structure store
  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  # The Redis Browser (https://github.com/humante/redis-browser) is a simple Key/Value browser
  redis-browser:
    image: birkof/redis-browser:latest
    command: "-B 0.0.0.0 -P 8019 --url redis://redis:6379"
    depends_on:
      - redis
    ports:
      - "8019:8019"

  # Mailhog is a local mail server with an inbox view
  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"

  # Message broker RabbitMQ with an HTTP-based API for management and monitoring
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
      - "15671:15671"
      - "15672:15672"
      - "25672:25672"
      - "8080:8080"

  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    command: /start-dev.sh
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=postgres
      - USE_DOCKER=yes
    volumes:
      - .:/app
    ports:
      - "8000:8000"
      - "80:8000"
    links:
      - postgres
      - mailhog
      - rabbitmq

#  jenkins:
#    image: library/jenkins
#    ports:
#      - "50000:50000"
#      - "8090:8080"


#  celeryworker:
#    build:
#      context: .
#      dockerfile: ./compose/django/Dockerfile
#    user: django
#    env_file: .env
#    depends_on:
#     - postgres
#    command: celery -A main.celery worker -l INFO
#
#  celerybeat:
#    build:
#      context: .
#      dockerfile: ./compose/django/Dockerfile
#    user: django
#    env_file: .env
#    depends_on:
#      - postgres
#    command: celery -A main.celery beat -l INFO